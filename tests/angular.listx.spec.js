// Generated by CoffeeScript 1.7.1
describe('ListX directive', function() {
  var $compile, $controller, $rootScope, $templateCache, element, listxConfig;
  element = $compile = $rootScope = $controller = $templateCache = listxConfig = null;
  beforeEach(module('listxModule'));
  beforeEach(module('list-tpl'));
  beforeEach(inject(function(_$compile_, _$rootScope_, _$controller_, _$templateCache_, _listxConfig_) {
    $compile = _$compile_;
    $rootScope = _$rootScope_;
    $templateCache = _$templateCache_;
    listxConfig = _listxConfig_;
    $rootScope.items = [
      {
        text: 'Item 1',
        desc: 'Desc 1'
      }, {
        text: 'Item 2',
        desc: 'Desc 2'
      }, {
        text: 'Item 3',
        desc: 'Desc 3'
      }, {
        text: 'Item 4',
        desc: 'Desc 4'
      }
    ];
    element = $compile('<list-x ng-model="items" title="Test"></list-x>')($rootScope);
    $rootScope.$digest();
    return $controller = _$controller_('listxController', {
      $scope: $rootScope,
      $element: element,
      $attrs: {},
      $transclude: function() {
        return null;
      },
      $templateCache: $templateCache,
      listxConfig: listxConfig
    });
  }));
  describe('ListX Controller', function() {
    return it('Has correct configuration', function() {
      expect($rootScope.searchBarTemplate).toEqual(listxConfig.searchBarTemplate);
      expect($rootScope.itemsTemplate).toEqual(listxConfig.itemsTemplate);
      return expect($rootScope.itemTemplate).toEqual(listxConfig.itemTemplate);
    });
  });
  it('Replaces the element with the appropriate content', function() {
    return expect(element).toHaveClass("list-x-main");
  });
  it('Has correct title', function() {
    var titleElement;
    titleElement = element.find(':first-child');
    expect(titleElement).toHaveId("list-x-title");
    return expect(titleElement[0].innerText.trim()).toEqual("Test");
  });
  it('Has a search bar', function() {
    var searchBarElement;
    searchBarElement = element.find('.search-bar');
    expect(searchBarElement).toExist();
    return expect(searchBarElement.find('input[type=search]')).toExist();
  });
  return it('Has correct number of items', function() {
    var items, listElement;
    listElement = element.find('ul.list-x');
    expect(listElement).toExist();
    items = listElement.find('li');
    expect(items).toHaveLength(4);
    return describe('List item', function() {
      return it('Has correct template', function() {
        return expect(items.find('.list-x-item')).toExist();
      });
    });
  });
});

//# sourceMappingURL=angular.listx.spec.map
